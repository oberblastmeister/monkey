# keywords
[[tokens]]
text = "fn"
ttype = "Keyword"
doc = "fn keyword"

[[tokens]]
text = "let"
ttype = "Keyword"
doc = "let keyword"

[[tokens]]
text = "true"
ttype = "Keyword"
doc = "true keyword"

[[tokens]]
text = "false"
ttype = "Keyword"
doc = "false keyword"

[[tokens]]
text = "if"
ttype = "Keyword"
doc = "if keyword"

[[tokens]]
text = "else"
ttype = "Keyword"
doc = "else keyword"

[[tokens]]
text = "return"
ttype = "Keyword"
doc = "return keyword"

# # literals
[[tokens]]
variant = "Number"
ttype = "Literal"
doc = "number literal"

[[tokens]]
variant = "String"
ttype = "Literal"
doc = "string literal"

[[tokens]]
variant = "EqEq" 
text = "=="
ttype = "Punct"
doc = "equality operator"

[[tokens]]
variant = "NotEq" 
text = "!="
ttype = "Punct"
doc = "inequality operator"

[[tokens]]
variant = "LParen" 
text = "("
ttype = "Punct"
doc = "left parenthesis delimiter"

[[tokens]]
variant = "RParen" 
text = ")"
ttype = "Punct"
doc = "right parenthesis delimiter"

[[tokens]]
variant = "LBrace" 
text = "{"
ttype = "Punct"
doc = "left brace delimiter"

[[tokens]]
variant = "RBrace" 
text = "}"
ttype = "Punct"
doc = "right brace delimiter"

[[tokens]]
variant = "LBracket" 
text = "["
ttype = "Punct"
doc = "left bracket delimiter"

[[tokens]]
variant = "RBracket" 
text = "]"
ttype = "Punct"
doc = "right bracket delimiter"

[[tokens]]
variant = "Colon" 
text = ":"
ttype = "Punct"
doc = "colon punctuation"

[[tokens]]
variant = "Eq" 
text = "="
ttype = "Punct"
doc = "assignment operator"

[[tokens]]
variant = "Walrus" 
text = ":="
ttype = "Punct"
doc = "walrus operator"

[[tokens]]
variant = "Comma" 
text = ","
ttype = "Punct"
doc = "comma puncuation"

[[tokens]]
variant = "Dot" 
text = "."
ttype = "Punct"
doc = "dot puncuation"

[[tokens]]
variant = "Semicolon" 
text = ";"
ttype = "Punct"
doc = "semicolon punctuation"

# operators
[[tokens]]
variant = "Plus" 
text = "+"
ttype = "Punct"

[[tokens]]
variant = "Minus" 
text = "-"
ttype = "Punct"

[[tokens]]
variant = "Asterisk" 
text = "*"
ttype = "Punct"

[[tokens]]
variant = "Slash" 
text = "/"
ttype = "Punct"

[[tokens]]
variant = "Modulo" 
text = "%"
ttype = "Punct"

[[tokens]]
variant = "Caret" 
text = "^"
ttype = "Punct"

# bitwise
[[tokens]]
variant = "ShiftLeft" 
text = "<<"
ttype = "Punct"

[[tokens]]
variant = "ShiftRight" 
text = ">>"
ttype = "Punct"

[[tokens]]
variant = "Tilde" 
text = "~"
ttype = "Punct"

[[tokens]]
variant = "BitAnd" 
text = "&"
ttype = "Punct"

[[tokens]]
variant = "BitOr" 
text = "|"
ttype = "Punct"

[[tokens]]
variant = "Lt" 
text = "<"
ttype = "Punct"

[[tokens]]
variant = "Gt" 
text = ">"
ttype = "Punct"

[[tokens]]
variant = "LtEq" 
text = "<="
ttype = "Punct"

[[tokens]]
variant = "GtEq" 
text = ">="
ttype = "Punct"

# logical
[[tokens]]
variant = "LogicalAnd" 
text = "&&"
ttype = "Punct"

[[tokens]]
variant = "LogicalOr" 
text = "||"
ttype = "Punct"

[[tokens]]
variant = "Bang" 
text = "!"
ttype = "Punct"
