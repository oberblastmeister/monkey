---
source: crates/monkey-lang/src/parsing/parser.rs
expression: "parse::<ast::File>(&input).map(|f| f.stmts)"

---
Ok(
    [
        If(
            StmtIf {
                if_token: IfKw {
                    token: Token {
                        span: Span {
                            start: 0,
                            end: 2,
                        },
                        kind: IfKw,
                        text: "if",
                    },
                },
                condition: Lit(
                    Bool(
                        LitBool {
                            token: Token {
                                span: Span {
                                    start: 3,
                                    end: 8,
                                },
                                kind: FalseKw,
                                text: "false",
                            },
                            value: false,
                        },
                    ),
                ),
                block: Block {
                    open_bracket: LBrace {
                        token: Token {
                            span: Span {
                                start: 9,
                                end: 10,
                            },
                            kind: LBrace,
                            text: "{",
                        },
                    },
                    stmts: [
                        Let(
                            StmtLet {
                                let_token: LetKw {
                                    token: Token {
                                        span: Span {
                                            start: 15,
                                            end: 18,
                                        },
                                        kind: LetKw,
                                        text: "let",
                                    },
                                },
                                ident: Ident {
                                    token: Token {
                                        span: Span {
                                            start: 19,
                                            end: 26,
                                        },
                                        kind: Ident,
                                        text: "is_true",
                                    },
                                },
                                eq: Eq {
                                    token: Token {
                                        span: Span {
                                            start: 27,
                                            end: 28,
                                        },
                                        kind: Eq,
                                        text: "=",
                                    },
                                },
                                expr: Lit(
                                    Num(
                                        LitNum {
                                            num: Number {
                                                token: Token {
                                                    span: Span {
                                                        start: 29,
                                                        end: 30,
                                                    },
                                                    kind: Number,
                                                    text: "5",
                                                },
                                            },
                                            value: 5.0,
                                        },
                                    ),
                                ),
                                semi: Semicolon {
                                    token: Token {
                                        span: Span {
                                            start: 30,
                                            end: 31,
                                        },
                                        kind: Semicolon,
                                        text: ";",
                                    },
                                },
                            },
                        ),
                    ],
                    close_bracket: RBrace {
                        token: Token {
                            span: Span {
                                start: 32,
                                end: 33,
                            },
                            kind: RBrace,
                            text: "}",
                        },
                    },
                },
                next: Some(
                    Else(
                        ElseBranch {
                            else_token: ElseKw {
                                token: Token {
                                    span: Span {
                                        start: 34,
                                        end: 38,
                                    },
                                    kind: ElseKw,
                                    text: "else",
                                },
                            },
                            block: Block {
                                open_bracket: LBrace {
                                    token: Token {
                                        span: Span {
                                            start: 39,
                                            end: 40,
                                        },
                                        kind: LBrace,
                                        text: "{",
                                    },
                                },
                                stmts: [
                                    Let(
                                        StmtLet {
                                            let_token: LetKw {
                                                token: Token {
                                                    span: Span {
                                                        start: 45,
                                                        end: 48,
                                                    },
                                                    kind: LetKw,
                                                    text: "let",
                                                },
                                            },
                                            ident: Ident {
                                                token: Token {
                                                    span: Span {
                                                        start: 49,
                                                        end: 56,
                                                    },
                                                    kind: Ident,
                                                    text: "another",
                                                },
                                            },
                                            eq: Eq {
                                                token: Token {
                                                    span: Span {
                                                        start: 57,
                                                        end: 58,
                                                    },
                                                    kind: Eq,
                                                    text: "=",
                                                },
                                            },
                                            expr: Lit(
                                                Str(
                                                    LitStr {
                                                        token: Token {
                                                            span: Span {
                                                                start: 60,
                                                                end: 65,
                                                            },
                                                            kind: String,
                                                            text: "hello",
                                                        },
                                                    },
                                                ),
                                            ),
                                            semi: Semicolon {
                                                token: Token {
                                                    span: Span {
                                                        start: 66,
                                                        end: 67,
                                                    },
                                                    kind: Semicolon,
                                                    text: ";",
                                                },
                                            },
                                        },
                                    ),
                                ],
                                close_bracket: RBrace {
                                    token: Token {
                                        span: Span {
                                            start: 68,
                                            end: 69,
                                        },
                                        kind: RBrace,
                                        text: "}",
                                    },
                                },
                            },
                        },
                    ),
                ),
            },
        ),
    ],
)
