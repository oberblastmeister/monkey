---
source: crates/monkey-lang/src/parsing/parser.rs
expression: "parse::<ast::File>(&input).map(|f| f.stmts)"

---
Ok(
    [
        Let(
            StmtLet {
                let_token: LetKw {
                    token: Token {
                        span: Span {
                            start: 0,
                            end: 3,
                        },
                        kind: LetKw,
                        text: "let",
                    },
                },
                ident: Ident {
                    token: Token {
                        span: Span {
                            start: 4,
                            end: 7,
                        },
                        kind: Ident,
                        text: "var",
                    },
                },
                eq: Eq {
                    token: Token {
                        span: Span {
                            start: 8,
                            end: 9,
                        },
                        kind: Eq,
                        text: "=",
                    },
                },
                expr: Lit(
                    Num(
                        LitNum {
                            num: Number {
                                token: Token {
                                    span: Span {
                                        start: 10,
                                        end: 11,
                                    },
                                    kind: Number,
                                    text: "4",
                                },
                            },
                            value: 4.0,
                        },
                    ),
                ),
                semi: Semicolon {
                    token: Token {
                        span: Span {
                            start: 11,
                            end: 12,
                        },
                        kind: Semicolon,
                        text: ";",
                    },
                },
            },
        ),
        Let(
            StmtLet {
                let_token: LetKw {
                    token: Token {
                        span: Span {
                            start: 13,
                            end: 16,
                        },
                        kind: LetKw,
                        text: "let",
                    },
                },
                ident: Ident {
                    token: Token {
                        span: Span {
                            start: 17,
                            end: 24,
                        },
                        kind: Ident,
                        text: "another",
                    },
                },
                eq: Eq {
                    token: Token {
                        span: Span {
                            start: 25,
                            end: 26,
                        },
                        kind: Eq,
                        text: "=",
                    },
                },
                expr: Lit(
                    Str(
                        LitStr {
                            token: Token {
                                span: Span {
                                    start: 28,
                                    end: 33,
                                },
                                kind: String,
                                text: "hello",
                            },
                        },
                    ),
                ),
                semi: Semicolon {
                    token: Token {
                        span: Span {
                            start: 34,
                            end: 35,
                        },
                        kind: Semicolon,
                        text: ";",
                    },
                },
            },
        ),
    ],
)
