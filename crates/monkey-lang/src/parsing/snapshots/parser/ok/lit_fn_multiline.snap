---
source: crates/monkey-lang/src/parsing/tests.rs
expression: actual
input_file: crates/monkey-lang/src/parsing/snapshots/parser/ok/lit_fn_multiline.mk

---
Ok(
    File {
        stmts: [
            Let(
                StmtLet {
                    let_token: LetKw {
                        token: Token {
                            span: Span {
                                start: 0,
                                end: 3,
                            },
                            kind: LetKw,
                            text: "let",
                        },
                    },
                    ident: Ident {
                        token: Token {
                            span: Span {
                                start: 4,
                                end: 8,
                            },
                            kind: Ident,
                            text: "test",
                        },
                    },
                    eq: Eq {
                        token: Token {
                            span: Span {
                                start: 9,
                                end: 10,
                            },
                            kind: Eq,
                            text: "=",
                        },
                    },
                    expr: Lit(
                        Fn(
                            LitFn {
                                fn_token: FnKw {
                                    token: Token {
                                        span: Span {
                                            start: 11,
                                            end: 13,
                                        },
                                        kind: FnKw,
                                        text: "fn",
                                    },
                                },
                                parameters: Parameters(
                                    List {
                                        open_delimit: LParen {
                                            token: Token {
                                                span: Span {
                                                    start: 13,
                                                    end: 14,
                                                },
                                                kind: LParen,
                                                text: "(",
                                            },
                                        },
                                        inner: [
                                            Ident {
                                                token: Token {
                                                    span: Span {
                                                        start: 19,
                                                        end: 20,
                                                    },
                                                    kind: Ident,
                                                    text: "x",
                                                },
                                            },
                                            Ident {
                                                token: Token {
                                                    span: Span {
                                                        start: 26,
                                                        end: 27,
                                                    },
                                                    kind: Ident,
                                                    text: "y",
                                                },
                                            },
                                        ],
                                        close_delimit: RParen {
                                            token: Token {
                                                span: Span {
                                                    start: 29,
                                                    end: 30,
                                                },
                                                kind: RParen,
                                                text: ")",
                                            },
                                        },
                                        sep: PhantomData,
                                    },
                                ),
                                body: Block {
                                    open_bracket: LBrace {
                                        token: Token {
                                            span: Span {
                                                start: 31,
                                                end: 32,
                                            },
                                            kind: LBrace,
                                            text: "{",
                                        },
                                    },
                                    stmts: [
                                        Return(
                                            StmtReturn {
                                                return_token: ReturnKw {
                                                    token: Token {
                                                        span: Span {
                                                            start: 37,
                                                            end: 43,
                                                        },
                                                        kind: ReturnKw,
                                                        text: "return",
                                                    },
                                                },
                                                expr: Infix(
                                                    ExprInfix {
                                                        lhs: Named(
                                                            Ident {
                                                                token: Token {
                                                                    span: Span {
                                                                        start: 44,
                                                                        end: 45,
                                                                    },
                                                                    kind: Ident,
                                                                    text: "x",
                                                                },
                                                            },
                                                        ),
                                                        token: Token {
                                                            span: Span {
                                                                start: 46,
                                                                end: 47,
                                                            },
                                                            kind: Plus,
                                                            text: "+",
                                                        },
                                                        op: Add,
                                                        rhs: Named(
                                                            Ident {
                                                                token: Token {
                                                                    span: Span {
                                                                        start: 48,
                                                                        end: 49,
                                                                    },
                                                                    kind: Ident,
                                                                    text: "y",
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi: Semicolon {
                                                    token: Token {
                                                        span: Span {
                                                            start: 49,
                                                            end: 50,
                                                        },
                                                        kind: Semicolon,
                                                        text: ";",
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    close_bracket: RBrace {
                                        token: Token {
                                            span: Span {
                                                start: 51,
                                                end: 52,
                                            },
                                            kind: RBrace,
                                            text: "}",
                                        },
                                    },
                                },
                            },
                        ),
                    ),
                    semi: Semicolon {
                        token: Token {
                            span: Span {
                                start: 52,
                                end: 53,
                            },
                            kind: Semicolon,
                            text: ";",
                        },
                    },
                },
            ),
        ],
    },
)
