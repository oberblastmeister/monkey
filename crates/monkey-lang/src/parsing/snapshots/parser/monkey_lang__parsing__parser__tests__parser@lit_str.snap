---
source: crates/monkey-lang/src/parsing/parser.rs
expression: "parse::<ast::File>(&input).map(|f| f.stmts)"

---
Ok(
    [
        Expr(
            StmtExpr {
                expr: Lit(
                    Str(
                        LitStr {
                            token: Token {
                                span: Span {
                                    start: 0,
                                    end: 19,
                                },
                                kind: String,
                                text: "\"this is a lit_str\"",
                            },
                        },
                    ),
                ),
                semi: Semicolon {
                    token: Token {
                        span: Span {
                            start: 19,
                            end: 20,
                        },
                        kind: Semicolon,
                        text: ";",
                    },
                },
            },
        ),
        Expr(
            StmtExpr {
                expr: Lit(
                    Str(
                        LitStr {
                            token: Token {
                                span: Span {
                                    start: 21,
                                    end: 38,
                                },
                                kind: String,
                                text: "\"another lit str\"",
                            },
                        },
                    ),
                ),
                semi: Semicolon {
                    token: Token {
                        span: Span {
                            start: 38,
                            end: 39,
                        },
                        kind: Semicolon,
                        text: ";",
                    },
                },
            },
        ),
        Expr(
            StmtExpr {
                expr: Lit(
                    Str(
                        LitStr {
                            token: Token {
                                span: Span {
                                    start: 40,
                                    end: 53,
                                },
                                kind: String,
                                text: "\'another str\'",
                            },
                        },
                    ),
                ),
                semi: Semicolon {
                    token: Token {
                        span: Span {
                            start: 53,
                            end: 54,
                        },
                        kind: Semicolon,
                        text: ";",
                    },
                },
            },
        ),
    ],
)
